framework:
  messenger:
    default_bus: command.bus
    buses:
      command.bus:
      query.bus:
      event.bus:
        default_middleware:
          enabled: true
          # set "allow_no_handlers" to true (default is false) to allow having
          # no handler configured for this bus without throwing an exception
          allow_no_handlers: false
          # set "allow_no_senders" to false (default is true) to throw an exception
          # if no sender is configured for this bus
          allow_no_senders: true
    # Uncomment this (and the failed transport below) to send failed messages to this transport for later handling.
    # failure_transport: failed
    transports:
      async:
        dsn: '%env(MESSENGER_TRANSPORT_DSN)%'
        retry_strategy:
          max_retries: 5
          # milliseconds delay
          delay: 4000
          # causes the delay to be higher before each retry
          # e.g. 1-second delay, 2 seconds, 4 seconds
          multiplier: 10
          max_delay: 0

      failed: 'doctrine://default?queue_name=failed'
      sync: 'sync://'

    routing:
      # Main
      'App\Main\Domain\Event\UpdateHandleEvent': async
      # Choco
      'App\Choco\Domain\Event\ChatMember\NewMemberNotifyEvent': async
      'App\Choco\Domain\Event\ChatMember\ExpiredWarnNotifyEvent': async
      'App\Choco\Domain\Event\Marry\MarryRequestEvent': async
      'App\Choco\Domain\Event\Marry\SuccessfullyMarriedEvent': async
when@test:
  framework:
    messenger:
      transports:
        async: 'sync://'
